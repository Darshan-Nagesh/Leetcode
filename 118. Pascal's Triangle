class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        ArrayList<Integer> prev = new ArrayList<Integer>();
        if(numRows <= 0)
            return res;
        prev.add(1);
        res.add(prev);
        for(int i=2;i<=numRows;i++){
            ArrayList<Integer> cur = new ArrayList<Integer>();
            cur.add(1);
            for(int j=0;j<prev.size()-1;j++)
                cur.add(prev.get(j)+prev.get(j+1));
            cur.add(1);
            res.add(cur);
            prev = cur;
        }
        return res;
    }
}

----------------------------------------------------------------------------------

import java.util.ArrayList;

public class Solution {
	public static ArrayList<ArrayList<Long>> printPascal(int n) {
		ArrayList<ArrayList<Long>> triangle = new ArrayList<ArrayList<Long>>();
		for (int i = 0; i < n; i++) {
			ArrayList<Long> add = new ArrayList<Long>();
			for (int j = 0; j <= i; j++) {
				add.add(calPascal((long) i, (long) j));
			}
			triangle.add(add);
		}
		return triangle;
	}

	public static long calPascal(long i, long j) {
		if (j == 0 || j == i) {
			return 1;
		} else {
			return calPascal(i - 1, j - 1) + calPascal(i - 1, j);
		}
	}
}
